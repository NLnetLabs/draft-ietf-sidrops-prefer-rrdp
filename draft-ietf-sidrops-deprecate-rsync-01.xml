<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd' []>
<rfc ipr="trust200902" category="std" docName="draft-ietf-sidrops-deprecate-rsync-01" updates="6841, 8182">
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc private=""?>
<?rfc topblock="yes"?>
<?rfc comments="no"?>
<front>
<title abbrev="RPKI Repository Requirements">Resource Public Key Infrastructure (RPKI) Repository Requirements</title>

<author initials="T." surname="Bruijnzeels" fullname="Tim Bruijnzeels">
<organization>NLnet Labs</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>tim@nlnetlabs.nl</email>
<uri>https://www.nlnetlabs.nl/</uri>
</address>
</author>
<author initials="R." surname="Bush" fullname="Randy Bush">
<organization>Internet Initiative Japan &amp; Arrcus, Inc.</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>randy@psg.com</email>
<uri></uri>
</address>
</author>
<author initials="G." surname="Michaelson" fullname="George Michaelson">
<organization>APNIC</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>ggm@apnic.net</email>
<uri>http://www.apnic.net</uri>
</address>
</author>
<date year="2021" month="February" day="18"/>

<area>Internet</area>
<workgroup></workgroup>


<abstract>
<t>This document formulates a plan of a phased transition to a state where
RPKI repositories and Relying Party software performing RPKI Validation
will use the RPKI Repository Delta Protocol (RRDP) <xref target="RFC8182"/> as the
only mandatory to implement access protocol.
</t>
<t>In short this plan consists of the following phases.
</t>
<t>In phase 0, today's deployment, RRDP is supported by most, but not all
Repositories, and most but not all RP software.
</t>
<t>In the proposed phase 1 RRDP will become mandatory to implement for
Repositories, in addition to rsync. This phase can start as soon as
this document is published.
</t>
<t>Once the proposed updates are implemented by all Repositories phase 2
will start. In this phase RRDP will become mandatory to implement for
all RP software, and rsync is no longer required.
</t>
<t>Measurements will need to be done to help determine when it will be
safe to transition to the final phase of this plan. During this phase
Repositories will no longer be required to provide rsync access for
RPKI validation purposes. However, they may still provide rsync access
for direct access to files for other purposes, if desired, at a best
effort basis.
</t>
<t>Although this document currently includes descriptions and updates
to RFCs for each of these phases, we may find that it will be beneficial
to have separate documents for the plan, and each phase, so that it
might be more clear to all when the updates to RFCs take effect.
</t>
</abstract>


</front>

<middle>

<section anchor="requirements-notation" title="Requirements notation">
<t>The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;, &quot;SHOULD&quot;,
&quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;, &quot;NOT RECOMMENDED&quot;, &quot;MAY&quot;, and &quot;OPTIONAL&quot; in
this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/>
<xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.
</t>
</section>

<section anchor="motivation" title="Motivation">
<t>The Resource Public Key Infrastructure (RPKI) <xref target="RFC6480"/> as originally defined
uses rsync as its distribution protocol, as outlined in <xref target="RFC6481"/>. Later, the
RPKI Repository Delta Protocol (RRDP) <xref target="RFC8182"/> was designed to provide an
alternative. In order to facilitate incremental deployment RRDP has been
deployed as an additional optional protocol, while rsync was still mandatory to
implement.
</t>
<t>While rsync has been very useful in the initial deployment of RPKI, a number of
issues observed with it motivated the design of RRDP, e.g.:
</t>
<t>
<list style="symbols">
<t>rsync is CPU and memory heavy on the server side, and easy to DoS</t>
<t>rsync library support is lacking, complicating RP efficiency and error logging</t>
<t>we cannot ensure that RPs get atomic sets of updated objects</t>
</list>
</t>
<t>RRDP was designed to leverage HTTPS CDN infrastructure to provide RPKI Repository
content in a resilient way, while reducing the load on the Repository server. It
supports that updates are published as atomic deltas, which can help prevent
most of the issues described in section 6 of <xref target="RFC6486"/>.
</t>
<t>For a longer discussion please see section 1 of <xref target="RFC8182"/>.
</t>
<t>In conclusion: we believe that while RRDP is not perfect, and we may indeed
need future work to improve on it, it is an improvement over using rsync in the
context of RPKI. Therefore, this document outlines a transition plan where RRDP
becomes mandatory to implement, and rsync becomes optional.
</t>
</section>

<section anchor="plan" title="Plan">
<t>Changing the RPKI infrastructure to rely on RRDP instead of rsync is a delicate
operation. There is current deployment of Certification Authorities, Repository
Servers and Relying Party software which relies on rsync, and which may not yet
support RRDP.
</t>
<t>Therefore we need to have a plan that ultimately updates the relevant RFCs, but
which uses a phased approach combined with measurements to limit the operational
impact of doing this to (almost) zero.
</t>
<t>The general outline of the plan is as follows. We will describe each step in
more detail below.
</t>
<texttable>
<ttcol align="center">Phase</ttcol>
<ttcol align="center">Description</ttcol>

<c>0</c><c>RPKI repositories support rsync, and optionally RRDP</c>
<c>1</c><c>RPKI repositories support both rsync and RRDP</c>
<c>2</c><c>All RP software prefers RRDP</c>
<c>3</c><c>RPKI repositories support RRDP, and optionally rsync</c>
</texttable>

<section anchor="phase-0--rpki-repositories-support-rsync-and-optionally-rrdp" title="Phase 0 - RPKI repositories support rsync, and optionally RRDP">
<t>This is the situation at the time of writing this document. Relying Parties can
prefer RRDP over rsync today, but they need to support rsync until all RPKI
repositories support RRDP. Therefore all repositories should support RRDP at
their earliest convenience.
</t>

<section anchor="updates-to-rfc-8182" title="Updates to RFC 8182">
<t>Repositories which support RRDP MUST ensure that RRDP resources are available
to Relying Parties (section 3.3 of <xref target="RFC8182"/>). Furthermore, the RRDP repository
MUST include all current repository objects. Because of this the choice of
falling back to alternative repository access mechanisms was left as a local
policy choice of RP software.
</t>
<t>However, following discussions on this subject it has become clear that there is
a preference to instruct RP software to make use of all possible data sources.
The main motivation being that because of RPKI object security using a secondary
source of data can never lead to a worse outcome in terms of validation.
</t>
<t>The following update is therefore applicable to section 3.4.5 &quot;Considerations
Regarding Operational Failures in RRDP&quot; of <xref target="RFC8182"/>:
</t>
<t>OLD:
   Relying Parties could attempt to use alternative repository access
   mechanisms, if they are available, according to the accessMethod
   element value(s) specified in the SIA of the associated certificate
   (see Section 4.8.8 of [RFC6487]).
</t>
<t>NEW:
   Relying Parties MUST attempt to use alternative repository access
   mechanisms, if they are available, according to the accessMethod
   element value(s) specified in the SIA of the associated certificate
   (see Section 4.8.8 of [RFC6487]).
</t>
</section>

<section anchor="updates-to-rfc-6481" title="Updates to RFC 6481">
<t>As noted above section 3.3 of <xref target="RFC8182"/> already stipulates that RRDP
files MUST be made available by repositories which support RRDP. In other
words the RRDP service must be treated as a critical service wherever it
is supported.
</t>
<t>During this phase the updates are applied to section 3 of <xref target="RFC6481"/>, to
make this abundantly clear:
</t>
<t>OLD:
</t>
<t>
<list style="symbols">
<t>The publication repository SHOULD be hosted on a highly
available service and high-capacity publication platform.</t>
<t>The publication repository MUST be available using rsync
<xref target="RFC5781"/> [RSYNC]. Support of additional retrieval mechanisms
is the choice of the repository operator.  The supported
retrieval mechanisms MUST be consistent with the accessMethod
element value(s) specified in the SIA of the associated CA or
EE certificate.</t>
</list>
</t>
<t>NEW:
</t>
<t>
<list style="symbols">
<t>The publication repository MAY be available using the RPKI
Repository Delta Protocol <xref target="RFC8182"/>. If RRPD is provided,
if SHOULD be hosted on a highly available platform.</t>
<t>The publication repository MUST be available using rsync
<xref target="RFC5781"/> [RSYNC]. The rsync server SHOULD be hosted on a
highly available platform.</t>
<t>Support of additional retrieval mechanisms is the choice of the repository
operator. The supported retrieval mechanisms MUST be consistent with the
accessMethod element value(s) specified in the SIA of the associated CA or
EE certificate.</t>
</list>
</t>
</section>
</section>

<section anchor="phase-1--rpki-repositories-support-both-rsync-and-rrdp" title="Phase 1 - RPKI repositories support both rsync and RRDP">
<t>During this phase we will make RRDP mandatory to support for Repository Servers,
and measure whether the deployed Repository Servers have been upgraded to do so,
in as far as they don't support RRDP already.
</t>

<section anchor="current-support-for-rrdp-in-repository-software" title="Current Support for RRDP in Repository Software">
<t>The currently known support for RRDP for repositories is as follows:
</t>
<texttable>
<ttcol align="center">Repository Implementation</ttcol>
<ttcol align="center">Support for RRDP</ttcol>

<c>afrinic</c><c>yes</c>
<c>apnic</c><c>yes</c>
<c>arin</c><c>yes</c>
<c>lacnic</c><c>planned</c>
<c>ripe ncc</c><c>yes</c>
<c>Dragon Research Labs</c><c>yes(1,2)</c>
<c>krill</c><c>yes(1)</c>
</texttable>
<t>(1) in use at various National Internet Registries, as well as other resource
    holders under RIRs.
(2) not all organizations using this software have upgraded to using RRDP.
</t>
</section>

<section anchor="updates-to-rfc-6481-1" title="Updates to RFC 6481">
<t>During this phase the updates are applied to section 3 of <xref target="RFC6481"/>.
</t>
<t>OLD:
</t>
<t>
<list style="symbols">
<t>The publication repository SHOULD be hosted on a highly
available service and high-capacity publication platform.</t>
<t>The publication repository MUST be available using rsync
<xref target="RFC5781"/> [RSYNC]. Support of additional retrieval mechanisms
is the choice of the repository operator.  The supported
retrieval mechanisms MUST be consistent with the accessMethod
element value(s) specified in the SIA of the associated CA or
EE certificate.</t>
</list>
</t>
<t>NEW:
</t>
<t>
<list style="symbols">
<t>The publication repository MUST be available using the RPKI
Repository Delta Protocol <xref target="RFC8182"/>. The RRDP server SHOULD
be hosted on a highly available platform.</t>
<t>The publication repository MUST be available using rsync
<xref target="RFC5781"/> [RSYNC]. The rsync server SHOULD be hosted on a
highly available platform.</t>
<t>Support of additional retrieval mechanisms is the choice of the repository
operator. The supported retrieval mechanisms MUST be consistent with the
accessMethod element value(s) specified in the SIA of the associated CA or
EE certificate.</t>
</list>
</t>
</section>

<section anchor="measurements" title="Measurements">
<t>We can find out whether all RPKI repositories support RRDP by running (possibly)
modified Relying Party software that keeps track of this.
</t>
<t>When it is found that Repositories do not yet support RRDP, outreach should be
done to them individually. Since the number of Repositories is fairly low, and
it is in their interest to run RRDP because it addresses availability concerns,
we have confidence that we will find these Repositories willing to make changes.
</t>
</section>
</section>

<section anchor="phase-2--all-rp-software-prefers-rrdp" title="Phase 2 - All RP software prefers RRDP">
<t>Once all Repositories support RRDP we can proceed to make RRDP mandatory to
implement for Relying Party software.
</t>

<section anchor="rrdp-support-in-relying-party-software" title="RRDP support in Relying Party software">
<t>The currently known support for RRDP in Relying Party software is as follows:
</t>
<texttable>
<ttcol align="center">Relying Party Implementation</ttcol>
<ttcol align="center">RRDP</ttcol>
<ttcol align="center">version</ttcol>
<ttcol align="center">since</ttcol>

<c>FORT</c><c>yes</c><c>?</c><c>?</c>
<c>OctoRPKI</c><c>yes</c><c>?</c><c>?</c>
<c>rcynic</c><c>yes</c><c>?</c><c>?</c>
<c>RIPE NCC RPKI Validator 2.x</c><c>yes</c><c>2.18</c><c>07/2015</c>
<c>RIPE NCC RPKI Validator 3.x</c><c>yes</c><c>3.0</c><c>03/2018</c>
<c>Routinator</c><c>yes</c><c>0.6.0</c><c>09/2019</c>
<c>rpki-client</c><c>ongoing</c><c>?</c><c>?</c>
<c>RPSTIR2</c><c>yes</c><c>2.0</c><c>04/2020</c>
</texttable>
<t>The authors kindly request Relying Party software implementers to let us know
in which version of their tool support for RRDP was introduced, and when that
version was released.
</t>
</section>

<section anchor="updates-to-rfc-8182-1" title="Updates to RFC 8182">
<t>From this phase onwards the updates are applied to section 3.4.1 of <xref target="RFC8182"/>.
</t>
<t>OLD:
  When a Relying Party performs RPKI validation and learns about a
  valid certificate with an SIA entry for the RRDP protocol, it SHOULD
  use this protocol as follows.
</t>
<t>NEW:
  When a Relying Party performs RPKI validation and learns about a
  valid certificate with an SIA entry for the RRDP protocol, it MUST
  use this protocol with preference.
</t>
<t>Note that this means, that RRDP should be preferred, but per the updated text
of section 3.4.5 of <xref target="RFC8182"/> fallback to rsync, if it is available, is still
required.
</t>
</section>

<section anchor="measurements-1" title="Measurements">
<t>Although the tools may support RRDP, users will still need to install updated
versions of these tools in their infrastructure. Any Repository operator can
measure this transition by observing access to their RRDP and rsync repositories
respectively.
</t>
<t>But even after new versions have been available, it is expected that there will
be long, low volume, tail of users who did not upgrade and still depend on rsync.
</t>
<t>It is hard to quantify here now, what would be an acceptable moment to conclude
that it's safe to move to the next phase and make rsync optional. A parallel to
the so-called DNS Flag Day comes to mind.
</t>
</section>
</section>

<section anchor="phase-3--rpki-repositories-support-rrdp-and-optionally-rsync" title="Phase 3 - RPKI repositories support RRDP, and optionally rsync">
<t>The end goal of this phase is that there will be no operational dependencies on
rsync for Repositories, although they MAY still choose to operate rsync at a
best effort basis.
</t>

<section anchor="updates-to-rfc-6481-2" title="Updates to RFC 6481">
<t>From this phase onwards these updates are applied to section 3 of <xref target="RFC6481"/> as
it was updated during Phase 2 described above:
</t>
<t>OLD:
</t>
<t>
<list style="symbols">
<t>The publication repository MUST be available using the RPKI
Repository Delta Protocol <xref target="RFC8182"/>. The RRDP server SHOULD
be hosted on a highly available platform.</t>
<t>The publication repository MUST be available using rsync
<xref target="RFC5781"/> [RSYNC]. The rsync server SHOULD be hosted on a
highly available platform.</t>
<t>Support of additional retrieval mechanisms is the choice of the repository
operator. The supported retrieval mechanisms MUST be consistent with the
accessMethod element value(s) specified in the SIA of the associated CA or
EE certificate.</t>
</list>
</t>
<t>NEW:
</t>
<t>
<list style="symbols">
<t>The publication repository MUST be available using the RPKI
Repository Delta Protocol <xref target="RFC8182"/>. The RRDP server SHOULD
be hosted on a highly available platform.</t>
<t>The publication repository MAY be available using rsync <xref target="RFC5781"/> [RSYNC].</t>
<t>Support of additional retrieval mechanisms is the choice of the repository
operator. The supported retrieval mechanisms MUST be consistent with the
accessMethod element value(s) specified in the SIA of the associated CA or
EE certificate.</t>
</list>
</t>
<t>Note that this means that RP software is still required to try to fall back
to rsync if RRDP is unavailable, but it may find that the rsync repository is
not available.
</t>
</section>
</section>
</section>

<section anchor="rsync-uris-as-object-identifiers" title="Rsync URIs as object identifiers">
<t>If and when RPKI Repositories no longer need to support rsync, this begs the
question whether rsync should still be used in URIs used in RPKI objects.
</t>
<t><xref target="RFC6481"/> defines a profile for the Resource Certificate Repository Structure.
In this profile objects are identified through rsync URIs. E.g. a CA certificate
has an Subject Information Access descriptor which uses an rsync URI to identify
its manifest <xref target="RFC6486"/>. The manifest enumerates the relative names and hashes
for all objects published under the private key of the CA certificate. The full
rsync URI identifiers for each object can be resolved relative to the manifest
URI.
</t>
<t>Though it would be possible in principle to build up an RPKI tree hierarchy of
objects based on key identifiers and hashes <xref target="RFC8488"/>, most Relying Party
implementations have found it very useful to use rsync URIs for this purpose.
Furthermore, these identifiers make it much easier to name object in case of
validation problems, which help operators to address issues.
</t>
<t>For these reasons, RRDP still includes rsync URIs in the definition of the publish,
update and withdraw elements in the snapshot and delta files that it uses. See
section 3.5 of <xref target="RFC8182"/>. Thus, objects retrieved through RRDP can be mapped
easily to files and URIs, similar to as though rsync would have been used to
retrieve them.
</t>
<t>Alternatively, we could develop a new naming scheme for RPKI objects. Perhaps
based on Universal Resource Names (<xref target="RFC8141"/>). Doing so, would allow us to
use names which are independent from retrieval mechanisms, and thus they could
be less confusing in some regards, and provide more agility with regards to
future changes in those mechanisms. However, this would require that many updates
are made to existing RFCs. An incomplete list:
</t>
<t>
<list style="symbols">
<t>RFC6487 New names would have be allowed in the SIA, or perhaps an X509 extension,
could be used. But, the latter would have a direct impact on the deployability
of updated CA certificates - RP software would reject these certificates if
the extension is marked as critical by the CA and not understood by the RP.</t>
<t>RFC6492 New names (in whatever form) would need to be included certificate sign
requests sent to a parent CA. The parent CA will need to include a 'cert_url',
indicating where an issued certificate is published, in a different format.</t>
<t>RFC8181 The RPKI publication protocol is based rsync URIs, and it assumes that
publishers have access to a specific directory in rsync space. This would need
to be changed.</t>
<t>RFC8183 This RFC defines the identity exchange between an RPKI CA and Publication
Server. The server's response includes an 'sia_base', in the form of an rsync
directory, under which a CA is supposed to name its objects.</t>
<t>RFC8182 The RRDP protocol uses rsync URIs for compatibility with rsync as a
retrieval method. This would need to be updated.</t>
</list>
</t>
<t>Because of this complexity, we consider such a change out of scope for this document
for now, and we continue the use of rsync as the mandatory scheme in the CRL Distribution
Points, Authority Information Access, and Subject Information Access defined in
<xref target="RFC6487"/> - even if there may be no RPKI Objects available at these URIs.
</t>
</section>

<section anchor="iana-considerations" title="IANA Considerations">
<t>This document has no IANA actions.
</t>
</section>

<section anchor="security-considerations" title="Security Considerations">
<t>TBD
</t>
</section>

<section anchor="acknowledgements" title="Acknowledgements">
<t>TBD
</t>
</section>

</middle>
<back>
<references title="Normative References">
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5781.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6480.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6481.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6486.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6487.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8182.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8488.xml"?>
</references>
<references title="Informative References">
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8141.xml"?>
</references>

</back>
</rfc>
