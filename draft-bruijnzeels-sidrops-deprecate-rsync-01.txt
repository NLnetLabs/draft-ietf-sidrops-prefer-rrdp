



Network Working Group                                     T. Bruijnzeels
Internet-Draft                                                NLnet Labs
Updates: 6841, 8182 (if approved)                                R. Bush
Intended status: Standards TrackInternet Initiative Japan & Arrcus, Inc.
Expires: October 25, 2020                                  G. Michaelson
                                                                   APNIC
                                                          April 23, 2020


   Resource Public Key Infrastructure (RPKI) Repository Requirements
              draft-sidrops-bruijnzeels-deprecate-rsync-01

Abstract

   This document updates the profile for the structure of the Resource
   Public Key Infrastructure (RPKI) distributed repository [RFC6481] by
   describing how the RPKI Repository Delta Protocol (RRDP) [RFC8182]
   can be used, and stipulating that repositories which are made
   available over RRDP are no longer required to be available over
   rsync.

   The Profile for X.509 PKIX Resource Certificates [RFC6487] uses rsync
   URIs in the Authority Information Access, Subject Information Access,
   and CRL Distribution Points extensions.  This document leaves this
   unchanged, meaning that rsync URIs are still used for naming and
   finding objects in the RPKI.  However, it is no longer guaranteed
   that objects can be retrieved using these URIs.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on October 25, 2020.







Bruijnzeels, et al.     Expires October 25, 2020                [Page 1]

Internet-Draft        RPKI Repository Requirements            April 2020


Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Requirements notation . . . . . . . . . . . . . . . . . . . .   2
   2.  Motivation  . . . . . . . . . . . . . . . . . . . . . . . . .   3
   3.  Updates to RFC 6481 . . . . . . . . . . . . . . . . . . . . .   3
   4.  Updates to RFC 8182 . . . . . . . . . . . . . . . . . . . . .   4
   5.  Rsync URIs as object identifiers  . . . . . . . . . . . . . .   4
   6.  Deployment Phases . . . . . . . . . . . . . . . . . . . . . .   5
     6.1.  Phase 0 - RPKI repositories support rsync, and optionally
           RRDP  . . . . . . . . . . . . . . . . . . . . . . . . . .   5
     6.2.  Phase 1 - RPKI repositories support both rsync and RRDP .   5
     6.3.  Phase 2 - All RP software prefers RRDP  . . . . . . . . .   5
     6.4.  Phase 3 - No operational dependencies on rsync  . . . . .   6
   7.  Current State of RRDP Deployment  . . . . . . . . . . . . . .   6
     7.1.  RRDP support in RPKI Repositories . . . . . . . . . . . .   6
     7.2.  RRDP support in Relying Party software  . . . . . . . . .   6
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7
   9.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
   10. Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   7
   11. Normative References  . . . . . . . . . . . . . . . . . . . .   7
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   8

1.  Requirements notation

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.







Bruijnzeels, et al.     Expires October 25, 2020                [Page 2]

Internet-Draft        RPKI Repository Requirements            April 2020


2.  Motivation

   The Resource Public Key Infrastructure (RPKI) [RFC6480] as originally
   defined uses rsync as its distribution protocol, as outlined in
   [RFC6481].  Later, the RPKI Repository Delta Protocol (RRDP)
   [RFC8182] was designed to provide an alternative.  In order to
   facilitate incremental deployment RRDP has been deployed as an
   additional optional protocol, while rsync was still mandatory to
   implement.

   RPKI Repository operators are still required to provide 24/7 up-time
   to their rsync infrastructure, as long as the requirement to support
   rsync stands.  Thus, the benefit that they get from supporting RRDP,
   which enables the use of content delivery networks (CDNs) for this
   purpose, is limited.

   And as long as not all RPKI Repositories support RRDP, Relying Party
   software is still required to support rsync.  Because there is a lack
   of rsync client libraries, this is typically implemented by calling a
   system installed rsync binary.  This is inefficient, and has issues
   with regards to versioning of the rsync binary, as well as reporting
   errors reliably.

   This document requires that: - All RPKI repositories support RRDP as
   a highly available service - Relying Parties support and prefer RRDP
   over rsync - RPKI repositories support rsync for debugging purposes
   only

   This way all parties are freed of direct operational dependencies on
   rsync.

3.  Updates to RFC 6481

   This document updates [section 3 of @!RFC6481].

   OLD:

   o  The publication repository SHOULD be hosted on a highly available
      service and high-capacity publication platform.

   o  The publication repository MUST be available using rsync [RFC5781]
      [RSYNC].  Support of additional retrieval mechanisms is the choice
      of the repository operator.  The supported retrieval mechanisms
      MUST be consistent with the accessMethod element value(s)
      specified in the SIA of the associated CA or EE certificate.

   NEW:




Bruijnzeels, et al.     Expires October 25, 2020                [Page 3]

Internet-Draft        RPKI Repository Requirements            April 2020


   o  The publication repository MUST be available using the RPKI
      Repository Delta Protocol [RFC8182].  The RRDP server SHOULD be
      hosted on a highly available platform.

   o  The publication repository SHOULD be available using rsync
      [RFC5781] to support easy direct access to RPKI objects for
      debugging purposes.  However, it no longer required that the rsync
      repository is hosted on a highly available service and high-
      capacity publication platform.

   o  Support of additional retrieval mechanisms is the choice of the
      repository operator.  The supported retrieval mechanisms MUST be
      consistent with the accessMethod element value(s) specified in the
      SIA of the associated CA or EE certificate.

4.  Updates to RFC 8182

   This document updates [section 3.4.1 of @!RFC8182].

   OLD: When a Relying Party performs RPKI validation and learns about a
   valid certificate with an SIA entry for the RRDP protocol, it SHOULD
   use this protocol as follows.

   NEW: When a Relying Party performs RPKI validation and learns about a
   valid certificate with an SIA entry for the RRDP protocol, it MUST
   use this protocol.  It MUST NOT depend on object retrieval for this
   certificate over rsync for validation, although it MAY still use
   rsync access for other purposes under the understanding that
   availability is not guaranteed.

5.  Rsync URIs as object identifiers

   [RFC6481] defines a profile for the Resource Certificate Repository
   Structure.  In this profile objects are identified through rsync
   URIs.  E.g. a CA certificate has an Subject Information Access
   descriptor which uses an rsync URI to identify its manifest
   [RFC6486].  The manifest enumerates the relative names and hashes for
   all objects published under the private key of the CA certificate.
   The full rsync URI identifiers for each object can be resolved
   relative to the manifest URI.

   Though it would be possible in principle to build up an RPKI tree
   hierarchy of objects based on key identifiers and hashes [RFC8488],
   most Relying Party implementations have found it very useful to use
   rsync URIs for this purpose.  Furthermore, these identifiers make it
   much easier to name object in case of validation problems, which help
   operators to address issues.




Bruijnzeels, et al.     Expires October 25, 2020                [Page 4]

Internet-Draft        RPKI Repository Requirements            April 2020


   For these reasons, RRDP still includes rsync URIs in the definition
   of the publish, update and withdraw elements in the snapshot and
   delta files that it uses.  See section 3.5 of [RFC8182].  Thus,
   objects retrieved through RRDP can be mapped easily to files and
   URIs, similar to as though rsync would have been used to retrieve
   them.

   Even though objects are no longer guaranteed to be available over
   rsync, we still use rsync as the mandatory scheme in the CRL
   Distribution Points, Authority Information Access, and Subject
   Information Access defined in [RFC6487].  Changing this would
   introduce breaking changes which make deployment very hard indeed: we
   would need to invent an alternative naming scheme, which would need
   to be supported by all Relying Parties, before Certification
   Authorities can issue any certificate or RPKI signed objects using
   these schemes.

   Furthermore, it is very convenient to have direct access to RPKI
   objects using rsync for troubleshooting, debugging and research
   purposes.

6.  Deployment Phases

   We recognise the following phases:

6.1.  Phase 0 - RPKI repositories support rsync, and optionally RRDP

   This is the situation at the time of writing this document.  Relying
   Parties can prefer RRDP over rsync today, but they need to support
   rsync until all RPKI repositories support RRDP.  Therefore all
   repositories should support RRDP at their earliest convenience.

6.2.  Phase 1 - RPKI repositories support both rsync and RRDP

   Once all repositories support RRDP, all Relying Party software should
   start to prefer it over rsync.

6.3.  Phase 2 - All RP software prefers RRDP

   Although the tools may support RRDP, users will still need to install
   updated versions of these tools in their infrastructure.  Therefore
   it is expected that there will be long tail of users who still depend
   on rsync to be highly available.

   Measurements can help to determine the shape of this tail and can
   then help to inform the technical community of when it would be safe
   to move to the next phase.




Bruijnzeels, et al.     Expires October 25, 2020                [Page 5]

Internet-Draft        RPKI Repository Requirements            April 2020


6.4.  Phase 3 - No operational dependencies on rsync

   During this phase RPKI repositories will no longer be required to
   support rsync as a highly available service.

7.  Current State of RRDP Deployment

   [This section can be updated during discussion of this document, and
   may be removed before possible publication.]

7.1.  RRDP support in RPKI Repositories

             +---------------------------+------------------+
             | Repository Implementation | Support for RRDP |
             +---------------------------+------------------+
             |          afrinic          |       yes        |
             |           apnic           |       yes        |
             |            arin           |       yes        |
             |           lacnic          |     planned      |
             |          ripe ncc         |       yes        |
             |    Dragon Research Labs   |      yes(1)      |
             |           krill           |      yes(1)      |
             +---------------------------+------------------+

   (1) in use at various National Internet Registries, as well as other
   resource holders under RIRs.

7.2.  RRDP support in Relying Party software

       +------------------------------+------+---------+----------+
       | Relying Party Implementation | RRDP | version |  since   |
       +------------------------------+------+---------+----------+
       |             FORT             | yes  |    ?    |    ?     |
       |           OctoRPKI           | yes  |    ?    |    ?     |
       |            rcynic            | yes  |    ?    |    ?     |
       | RIPE NCC RPKI Validator 2.x  | yes  |    ?    |    ?     |
       | RIPE NCC RPKI Validator 3.x  | yes  |    ?    |    ?     |
       |          Routinator          | yes  |  0.6.0  | Sep 2019 |
       |         rpki-client          |  no  |    ?    |    ?     |
       |            RPSTIR            | yes  |    ?    |    ?     |
       +------------------------------+------+---------+----------+

   The authors kindly request Relying Party software implementers to let
   us know in which version of their tool support for RRDP was
   introduced, and when that version was released.






Bruijnzeels, et al.     Expires October 25, 2020                [Page 6]

Internet-Draft        RPKI Repository Requirements            April 2020


8.  IANA Considerations

   This document has no IANA actions.

9.  Security Considerations

   TBD

10.  Acknowledgements

   TBD

11.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC5781]  Weiler, S., Ward, D., and R. Housley, "The rsync URI
              Scheme", RFC 5781, DOI 10.17487/RFC5781, February 2010,
              <https://www.rfc-editor.org/info/rfc5781>.

   [RFC6480]  Lepinski, M. and S. Kent, "An Infrastructure to Support
              Secure Internet Routing", RFC 6480, DOI 10.17487/RFC6480,
              February 2012, <https://www.rfc-editor.org/info/rfc6480>.

   [RFC6481]  Huston, G., Loomans, R., and G. Michaelson, "A Profile for
              Resource Certificate Repository Structure", RFC 6481,
              DOI 10.17487/RFC6481, February 2012,
              <https://www.rfc-editor.org/info/rfc6481>.

   [RFC6486]  Austein, R., Huston, G., Kent, S., and M. Lepinski,
              "Manifests for the Resource Public Key Infrastructure
              (RPKI)", RFC 6486, DOI 10.17487/RFC6486, February 2012,
              <https://www.rfc-editor.org/info/rfc6486>.

   [RFC6487]  Huston, G., Michaelson, G., and R. Loomans, "A Profile for
              X.509 PKIX Resource Certificates", RFC 6487,
              DOI 10.17487/RFC6487, February 2012,
              <https://www.rfc-editor.org/info/rfc6487>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.






Bruijnzeels, et al.     Expires October 25, 2020                [Page 7]

Internet-Draft        RPKI Repository Requirements            April 2020


   [RFC8182]  Bruijnzeels, T., Muravskiy, O., Weber, B., and R. Austein,
              "The RPKI Repository Delta Protocol (RRDP)", RFC 8182,
              DOI 10.17487/RFC8182, July 2017,
              <https://www.rfc-editor.org/info/rfc8182>.

   [RFC8488]  Muravskiy, O. and T. Bruijnzeels, "RIPE NCC's
              Implementation of Resource Public Key Infrastructure
              (RPKI) Certificate Tree Validation", RFC 8488,
              DOI 10.17487/RFC8488, December 2018,
              <https://www.rfc-editor.org/info/rfc8488>.

Authors' Addresses

   Tim Bruijnzeels
   NLnet Labs

   Email: tim@nlnetlabs.nl
   URI:   https://www.nlnetlabs.nl/


   Randy Bush
   Internet Initiative Japan & Arrcus, Inc.

   Email: randy@psg.com


   George Michaelson
   APNIC

   Email: ggm@apnic.net
   URI:   http://www.apnic.net




















Bruijnzeels, et al.     Expires October 25, 2020                [Page 8]
